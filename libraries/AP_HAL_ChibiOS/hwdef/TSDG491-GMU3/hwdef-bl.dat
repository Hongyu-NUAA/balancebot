# hw definition file for processing by chibios_pins.py

# MCU class and specific type
MCU STM32G491 STM32G491xx

FLASH_RESERVE_START_KB 0
FLASH_BOOTLOADER_LOAD_KB 26

# reserve some space for params
APP_START_OFFSET_KB 4

# board ID for firmware load
APJ_BOARD_ID 1001

# setup build for a peripheral firmware
env AP_PERIPH 1

# crystal frequency
OSCILLATOR_HZ 8000000

# define CH_CFG_ST_FREQUENCY 1000000

# assume 128k flash part
FLASH_SIZE_KB 512

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

PA15 LED_BOOTLOADER OUTPUT LOW
PC10 LED_ACTIVITY OUTPUT LOW # green
define HAL_LED_ON 0

STDOUT_SERIAL SD3
STDOUT_BAUDRATE 57600

# order of UARTs
SERIAL_ORDER USART3

# USART1 for GPS
PB6 USART1_TX USART1 NODMA
PB7 USART1_RX USART1 NODMA

# USART2 for GPS
PA2 USART2_TX USART2 NODMA
PA3 USART2_RX USART2 NODMA

# USART3 for debug
PB10 USART3_TX USART3 NODMA
PB11 USART3_RX USART3 NODMA

define HAL_USE_SERIAL TRUE

define STM32_SERIAL_USE_USART1 TRUE
define STM32_SERIAL_USE_USART2 TRUE
define STM32_SERIAL_USE_USART3 TRUE

# make bl baudrate match debug baudrate for easier debugging
define BOOTLOADER_BAUDRATE 57600

define HAL_NO_GPIO_IRQ

define HAL_USE_EMPTY_IO TRUE

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 0

define PERIPH_FW TRUE

define HAL_DISABLE_LOOP_DELAY

define HAL_USE_EMPTY_STORAGE 1
define HAL_STORAGE_SIZE 16384

# avoid timer and RCIN threads to save memory
define HAL_NO_TIMER_THREAD
define HAL_NO_RCIN_THREAD

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

# define HAL_USE_CAN TRUE
# define STM32_CAN_USE_CAN1 TRUE

define CAN_APP_NODE_NAME "org.ardupilot.gmu3"

# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0
# passthrough CAN1
define HAL_DEFAULT_CPORT 1

# use a small bootloader timeout
define HAL_BOOTLOADER_TIMEOUT 1000

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

