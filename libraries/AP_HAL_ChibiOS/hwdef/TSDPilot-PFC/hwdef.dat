# hw definition for Sierra-F405

# MCU class and specific type
MCU STM32F4xx STM32F405xx

# bootloader starts firmware at 64k
FLASH_RESERVE_START_KB 64
FLASH_SIZE_KB 1024

# store parameters in pages 2 and 3
STORAGE_FLASH_PAGE 2
define HAL_STORAGE_SIZE 15360

# board ID for firmware load
APJ_BOARD_ID 1052

env AP_PERIPH 1

define STM32_ST_USE_TIMER 5
define CH_CFG_ST_RESOLUTION 32

# enable watchdog
define HAL_WATCHDOG_ENABLED_DEFAULT true

# crystal frequency
OSCILLATOR_HZ 8000000

STDOUT_SERIAL SD1
STDOUT_BAUDRATE 57600

define HAL_NO_GPIO_IRQ

# avoid timer and RCIN threads to save memory
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE

define DMA_RESERVE_SIZE 0

define HAL_DISABLE_LOOP_DELAY
define HAL_NO_MONITOR_THREAD
define HAL_NO_LOGGING

define HAL_DEVICE_THREAD_STACK 768

# we setup a small defaults.parm
define AP_PARAM_MAX_EMBEDDED_PARAM 512

# ---------------------- CAN bus -------------------------
PA11 CAN1_RX CAN1
PA12 CAN1_TX CAN1

CAN_ORDER 1

# use DNA for node allocation
define CAN_APP_NODE_NAME "tsdpilot.pfc"

# order of UARTs
SERIAL_ORDER USART1 

# USART1 for debug
PA9 USART1_TX USART1
PA10 USART1_RX USART1
define HAL_SERIAL0_BAUD_DEFAULT 57600


# --------------------- CAM Trigger + Feedback -----------------------
PA0  TIM2_CH1  TIM2 PWM(1) GPIO(50)
PB3  TIM2_CH2  TIM2 PWM(2) GPIO(51)
PB4  TIM3_CH1  TIM3 PWM(3) GPIO(52)
PB5  TIM3_CH2  TIM3 PWM(4) GPIO(53)

# enable ESC control
define HAL_SUPPORT_RCOUT_SERIAL 1
define HAL_WITH_ESC_TELEM 1


define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
#define HAL_DISABLE_ADC_DRIVER TRUE
# PA0 VSENSE ADC1 SCALE(2)

# -------------------- Buzzer+NeoPixels --------------------
define HAL_PERIPH_ENABLE_RC_OUT
define HAL_PERIPH_ENABLE_NOTIFY
define HAL_BARO_ALLOW_INIT_NO_BARO


define HAL_HAVE_PIXRACER_LED
PC13 LED_RED   OUTPUT GPIO(10)
PC14 LED_GREEN OUTPUT GPIO(11)
PC15 LED_BLUE  OUTPUT GPIO(12)

define HAL_GPIO_A_LED_PIN 10
define HAL_GPIO_B_LED_PIN 11
define HAL_GPIO_C_LED_PIN 12

# allow for reboot command for faster development
define HAL_PERIPH_LISTEN_FOR_SERIAL_UART_REBOOT_CMD_PORT 0

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True
