# hw definition file for processing by chibios_hwdef.py for CUAV-X7

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 8000000

# board ID for firmware load
APJ_BOARD_ID 10200

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# ChibiOS system timer
STM32_ST_USE_TIMER 13
define CH_CFG_ST_RESOLUTION 16

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# order of UARTs (and USB)
SERIAL_ORDER OTG1 UART7 UART4 USART3 USART2 UART8 USART1 UART5 OTG2

# default the 2nd interface to MAVLink2
define HAL_OTG2_PROTOCOL SerialProtocol_SLCAN

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA9  VBUS INPUT PULLDOWN

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# UART7 is telem
PE7 UART7_RX UART7
PE8 UART7_TX UART7

# UART4 GPS MB1
PA1 UART4_RX UART4 
PA0 UART4_TX UART4 

# UART4 GPS MB2
PD9 USART3_RX USART3
PD8 USART3_TX USART3

# UART2 WIFI
PD6 USART2_RX USART2
PD5 USART2_TX USART2

# UART8 
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# UART1
PB15 USART1_RX USART1
PB14 USART1_TX USART1

# UART5
PB12 UART5_RX UART5
PB13 UART5_TX UART5

# PWM channels
PD12  TIM4_CH1  TIM4  PWM(1)  GPIO(50)
PD13  TIM4_CH2  TIM4  PWM(2)  GPIO(51)
PD14  TIM4_CH3  TIM4  PWM(3)  GPIO(52)
PD15  TIM4_CH4  TIM4  PWM(4)  GPIO(53)
PC6   TIM3_CH1  TIM3  PWM(5)  GPIO(54)
PC7   TIM3_CH2  TIM3  PWM(6)  GPIO(55)
PB0   TIM3_CH3  TIM3  PWM(7)  GPIO(56)
PB1   TIM3_CH4  TIM3  PWM(8)  GPIO(57)

# AUX channels
PE14  TIM1_CH4  TIM1  PWM(9)  GPIO(58)
PE9   TIM1_CH1  TIM1  PWM(10) GPIO(59)

# NeoPixels
PA2   TIM15_CH1 TIM15 PWM(11) GPIO(60)

# ALARM
PA3   TIM5_CH4  TIM5  GPIO(61) ALARM

# RC input
PB11 TIM2_CH4 TIM2 RCININT PULLUP LOW 

# BATT
define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

define HAL_BATT_MONITOR_DEFAULT 8
define HAL_BATT_VOLT_PIN -1
define HAL_BATT_VOLT_SCALE -1
define HAL_BATT_CURR_PIN -1
define HAL_BATT_CURR_SCALE -1

# Heat
PA15 HEATER_EN OUTPUT LOW GPIO(80)
define HAL_HEATER_GPIO_PIN 80
define HAL_HAVE_IMU_HEATER 1
# default to 45C target temp
define HAL_IMU_TEMP_DEFAULT 45

# CAN bus
PD0  CAN1_RX CAN1
PD1  CAN1_TX CAN1

# 2nd CAN bus. Cannot be used at same time as USB_HS
PB5 CAN2_RX CAN2
PB6 CAN2_TX CAN2

CAN_ORDER 2 1

define CAN_APP_NODE_NAME "tsdpilot.s4.fcu"

# SPI1 - sensors1
PA5 SPI1_SCK  SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# SPI4 - sensors2
PE2 SPI4_SCK  SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# sensor 
PB9  BMI_CS    CS
PB4  ICM_CS    CS
PB3  BARO1_CS  CS
PC13 BARO2_CS  CS
PB7  RM3100_CS CS
PC14 FRAM_CS   CS

# SPI devices
SPIDEV ICM     SPI1 DEVID1  ICM_CS    MODE3  10*MHZ 10*MHZ
SPIDEV ms5611a SPI1 DEVID2  BARO1_CS  MODE3  20*MHZ 20*MHZ
SPIDEV rm3100  SPI1 DEVID3  RM3100_CS MODE3  2*MHZ  8*MHZ

SPIDEV BMI270  SPI4 DEVID1  BMI_CS    MODE3  2*MHZ  8*MHZ
SPIDEV ms5611b SPI4 DEVID2  BARO2_CS  MODE3  20*MHZ 20*MHZ
SPIDEV ramtron SPI4 DEVID3  FRAM_CS   MODE3  8*MHZ  8*MHZ

# TWO IMU
IMU Invensensev3 SPI:ICM ROTATION_YAW_90
IMU BMI270 SPI:BMI270 ROTATION_YAW_180

define HAL_DEFAULT_INS_FAST_SAMPLE 1
# define HAL_BARO_ALLOW_INIT_NO_BARO

# TWO baros
BARO MS56XX SPI:ms5611a
BARO MS56XX SPI:ms5611b
# define HAL_BARO_ALLOW_INIT_NO_BARO

# One compasses
COMPASS RM3100 SPI:rm3100 false ROTATION_PITCH_180

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

# LED setup is similar to PixRacer
define HAL_HAVE_PIXRACER_LED
PC1 LED_RED   OUTPUT GPIO(10)
PC0 LED_GREEN OUTPUT GPIO(11)
PC2 LED_BLUE  OUTPUT GPIO(12)

# PC0 LED_GREEN OUTPUT GPIO(10)
# PC1 LED_RED   OUTPUT GPIO(11)
# PC2 LED_BLUE  OUTPUT GPIO(12)
define HAL_GPIO_A_LED_PIN 10
define HAL_GPIO_B_LED_PIN 11
define HAL_GPIO_C_LED_PIN 12

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 0

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# ------------------ GPIO_ESC Control -----------------------
define HAL_GPIO_ESC_CTRL_ENABLED

define HAL_GPIO_ESC_OPEN_NUM (123456)
define HAL_GPIO_ESC_CLOSE_NUM (654321)

define HAL_GPIO_ESC_RC_CH CH_7

define AP_TEMPERATURE_SENSOR_ENABLED TRUE
define HAL_WITH_ESC_TELEM TRUE

# close save memory
define AP_MOTORS_FRAME_HEXA_ENABLED 0 
define AP_MOTORS_FRAME_DODECAHEXA_ENABLED 0 
define AP_MOTORS_FRAME_OCTA_ENABLED 0 
define AP_MOTORS_FRAME_DECA_ENABLED 0 
define AP_MOTORS_FRAME_Y6_ENABLED 0 

define AP_BARO_BMP085_ENABLED 0
define AP_BARO_BMP280_ENABLED 0
define AP_BARO_BMP388_ENABLED 0
define AP_BARO_DUMMY_ENABLED 0
define AP_BARO_DPS280_ENABLED 0
define AP_BARO_FBM320_ENABLED 0
define AP_BARO_ICM20789_ENABLED 0
define AP_BARO_ICP101XX_ENABLED 0
define AP_BARO_ICP201XX_ENABLED 0
define AP_BARO_KELLERLD_ENABLED 0
define AP_BARO_LPS2XH_ENABLED 0
define AP_BARO_MSP_ENABLED 0
define AP_BARO_SPL06_ENABLED 0

define AP_ROBOTISSERVO_ENABLED 0

define AP_GPS_ERB_ENABLED 0
define AP_GPS_GSOF_ENABLED 0
define AP_GPS_NOVA_ENABLED 0
define AP_GPS_SBF_ENABLED 0
define AP_GPS_SBP_ENABLED 0
define AP_GPS_SBP2_ENABLED 0
define AP_GPS_SIRF_ENABLED 0

define HAL_GENERATOR_ENABLED 0
define HAL_PROXIMITY_ENABLED 0
define HAL_PICCOLO_CAN_ENABLE 0

define RANGEFINDER_ENABLED 0
define AUTOTUNE_ENABLED 0
define SPRAYER_ENABLED 0
define OSD_ENABLED 0
define HAL_WITH_MSP_DISPLAYPORT 0
define OSD_PARAM_ENABLED 0

define MODE_ACRO_ENABLED 0
define MODE_DRIFT_ENABLED 0
define MODE_FLIP_ENABLED 0
define MODE_FOLLOW_ENABLED 0
define MODE_GUIDED_NOGPS_ENABLED 0
define MODE_SPORT_ENABLED 0
define MODE_THROW_ENABLED 0
define MODE_ZIGZAG_ENABLED 0

define CAMERA 0
